name: Mobile App CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'mobile-app/**'
      - '.github/workflows/mobile.yml'
  pull_request:
    branches: [ main, develop ]
    paths: 
      - 'mobile-app/**'
      - '.github/workflows/mobile.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Test and build mobile app
  test-and-build:
    name: Test and Build Mobile App
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./mobile-app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup React Native environment
      run: |
        npm install -g @react-native-community/cli
        npx react-native doctor
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npx tsc --noEmit
    
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v5
      with:
        file: ./mobile-app/coverage/lcov.info
        flags: mobile
        name: mobile-coverage
    
    - name: Build iOS
      run: |
        cd ios
        xcodebuild -workspace BorneoTrace.xcworkspace -scheme BorneoTrace -configuration Release -destination generic/platform=iOS -archivePath BorneoTrace.xcarchive archive
      env:
        IOS_SIGNING_IDENTITY: ${{ secrets.IOS_SIGNING_IDENTITY }}
        IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
    
    - name: Build Android
      run: |
        cd android
        ./gradlew assembleRelease
      env:
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    
    - name: Upload iOS build
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: ./mobile-app/ios/BorneoTrace.xcarchive
        retention-days: 30
    
    - name: Upload Android build
      uses: actions/upload-artifact@v3
      with:
        name: android-build
        path: ./mobile-app/android/app/build/outputs/apk/release/
        retention-days: 30

  # Deploy to TestFlight (iOS)
  deploy-ios-testflight:
    name: Deploy to TestFlight
    runs-on: macos-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    environment: ios-testflight
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download iOS build
      uses: actions/download-artifact@v3
      with:
        name: ios-build
        path: ./ios-build
    
    - name: Upload to TestFlight
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
      run: |
        xcrun altool --upload-app \
          --type ios \
          --file ./ios-build/BorneoTrace.xcarchive \
          --username $APPLE_ID \
          --password $APPLE_ID_PASSWORD

  # Deploy to Google Play Internal Testing (Android)
  deploy-android-playstore:
    name: Deploy to Google Play Internal Testing
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    environment: android-playstore
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download Android build
      uses: actions/download-artifact@v3
      with:
        name: android-build
        path: ./android-build
    
    - name: Setup Google Play Console
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.borneotrace.app
        releaseFiles: ./android-build/app-release.apk
        track: internal
        status: completed

  # Run E2E tests
  e2e-tests:
    name: E2E Tests
    runs-on: macos-latest
    needs: [deploy-ios-testflight, deploy-android-playstore]
    if: always() && (needs.deploy-ios-testflight.result == 'success' || needs.deploy-android-playstore.result == 'success')
    defaults:
      run:
        working-directory: ./mobile-app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Detox
      run: npm run build:detox
    
    - name: Run iOS E2E tests
      run: npm run test:e2e:ios
      env:
        DETOX_CONFIGURATION: ios.sim.release
      continue-on-error: true
    
    - name: Run Android E2E tests
      run: npm run test:e2e:android
      env:
        DETOX_CONFIGURATION: android.emu.release
      continue-on-error: true
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mobile-e2e-results
        path: ./mobile-app/e2e/reports/
        retention-days: 7

  # Security audit
  security:
    name: Mobile Security Audit
    runs-on: macos-latest
    needs: test-and-build
    defaults:
      run:
        working-directory: ./mobile-app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
    
    - name: Run CodeQL analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
    
    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v2

  # Performance testing
  performance:
    name: Performance Testing
    runs-on: macos-latest
    needs: [deploy-ios-testflight, deploy-android-playstore]
    if: always() && (needs.deploy-ios-testflight.result == 'success' || needs.deploy-android-playstore.result == 'success')
    defaults:
      run:
        working-directory: ./mobile-app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: npm run test:performance
      env:
        PERFORMANCE_BUDGET: 3000 # 3 seconds
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: mobile-performance-results
        path: ./mobile-app/performance/results/
        retention-days: 7

  # Notify deployment status
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-ios-testflight, deploy-android-playstore, e2e-tests, security, performance]
    if: always()
    
    steps:
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#borneotrace-deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      if: always()
    
    - name: Create deployment summary
      run: |
        echo "## Mobile App Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **iOS TestFlight**: ${{ needs.deploy-ios-testflight.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Android Play Store**: ${{ needs.deploy-android-playstore.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **E2E Tests**: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Security Audit**: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Performance Tests**: ${{ needs.performance.result }}" >> $GITHUB_STEP_SUMMARY
